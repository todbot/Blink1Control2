# Build Windows, optionally sign

name: windows

env:
  WINDOWS_CERTIFICATE_P12: ${{ secrets.WINDOWS_CERTIFICATE_P12 }}
  CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PWD }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  # see https://shipshape.io/blog/signing-electron-apps-with-github-actions/

on:
  push:
  pull_request:
  release:
    types: [created]
    #types: [published]  # publish a draft release to set github.event_name = 'release'

jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: windows-latest

    # Steps represent a sequence of tasks executed as part of the job
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup prerequisites
        run: echo "no prereqs to set up"

      - name: Install Node.js and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Codesign setup for Windows
        #if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "win-cert.p12"
          encodedString: ${{ secrets.WINDOWS_CERTIFICATE_P12 }}

      - name: Build
        run: |
          $env:CSC_LINK="${{ steps.write_file.outputs.filePath }}"
          npm install --save-dev cross-env
          npm install
          npm run pack
          npm run dist:draft

      - name: Publish
        continue-on-error: true
        if: "contains(github.event.head_commit.message, '[publish]')"
        #if: (github.event_name == 'release')  # or values = 'push' or 'pull_request'
        run: |
          $env:CSC_LINK="${{ steps.write_file.outputs.filePath }}"
          npm run dist

      #- name: Check files
      #  run: ls -alR --ignore=\.git --ignore=node_modules

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Blink1Control2-${{ runner.os }}
          path: |
            dist/Blink1Control2*zip
            dist/Blink1Control2*dmg
            dist/Blink1Control2*deb
            dist/Blink1Control2*tar.gz
            dist/Blink1Control2*AppImage
            dist/Blink1Control2*exe
            dist/Blink1Control2*blockmap
            dist/latest*yml
